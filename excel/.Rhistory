boxplot(AUC~Class, singcomb,add = T, col="#0000ff22", ylim=c(0,1))
dev.off()
summary(singcomb)
gsh <- subset(sing, sing$Atomtypes=="CA_CB_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Code=="GSH", select=c(Code,Class,AUC)) 
summary(gsh)
gsh <- subset(sing, sing$Atomtypes=="CA_CB_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="GSH", select=c(Code,Class,AUC)) 
summary(gsh)
gsh <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="GSH", select=c(Code,Class,AUC)) 
summary(gsh)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05", select=c(Code,Class,AUC)) 
png('boxplot.png')
beeswarm(AUC ~ Class, singcomb, col=sample(colors(),10), pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb,add = T, col="#0000ff22", ylim=c(0,1))
dev.off()
sing <- read.csv(file="hom_prot.csv", header=TRUE)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05", select=c(Code,Class,AUC)) 
png('boxplot_AUC_single.png')
boxplot(AUC~Class, singcomb, xlab="Ligand", ylab="AUC",main="AUC Click MÃºltiple 2017", ylim=c(0,1))
dev.off()
png('boxplot_AUC_single.png')
beeswarm(AUC ~ Class, singcomb, col=sample(colors(),10), pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, ylim=c(0,1))
dev.off()
png('boxplot_AUC_single.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, ylim=c(0,1))
dev.off()
png('boxplot_AUC_single.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
dev.off()
png('boxplot_AUC_single2.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, ylim=c(0,1))
dev.off()
png('boxplot_AUC_single2.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T, ylim=c(0,1))
dev.off()
png('boxplot_AUC_single2.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T,col="#ffffff" ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T,col="#ffffff", ylim=c(0,1))
dev.off()
png('boxplot_AUC_single2.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb,add = T, col="#0000ff22", ylim=c(0,1))
dev.off()
png('boxplot_AUC_single2.png')
boxplot(AUC~Class, singcomb,add = T, col="#0000ff22", ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T,col="#0000ff22", ylim=c(0,1))
dev.off()
png('boxplot_AUC_single3.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T, ylim=c(0,1))
dev.off()
png('boxplot_AUC_single4.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,main="hom_6.0", ylim=c(0,1))
boxplot(AUC~Class, singcomb, add = T, col="#ffffff",ylim=c(0,1))
dev.off()
q()
sing <- read.csv(file="hom_prot.csv", header=TRUE)
sing <- read.csv(file="best_hom_prot.csv", header=TRUE)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.0 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="LDA", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.0 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="SUC", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.0 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="SAM", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.0 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & sing$Class=="LLP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="PMP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="LDA", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="SUC", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="SAM", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="LLP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="U5P", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="1PE", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="GSH", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_GRE" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="PMP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==1.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SOScore08" & sing$Class=="PMP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="Srel" & sing$Class=="GSH", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="Srel" & sing$Class=="PMP", select=c(Code,Class,AUC)) 
summary(singcomb)
sing <- read.csv(file="best_hom_ligands.csv", header=TRUE)
singcomb <- subset(sing, , select=c(Code,Class,AUC)) 
summary(singcomb)
library(beeswarm)
png('best_ligands_homogeneous.png')
boxplot(AUC ~ Class, singcomb, add = T,col="#0000ff22",ylim=c(0,1))
boxplot(AUC ~ Class, singcomb,col="#0000ff22",ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
png('best_ligands_homogeneous.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
summary(singcomb)
singcomb <- subset(sing,sing$Class=="LDA" , select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SUC" , select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SAM" , select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PMP" , select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="GSH" , select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="LLP" , select=c(Code,Class,AUC)) 
summary(singcomb)
sing <- read.csv(file="best_hom_ligands.csv", header=TRUE)
singcomb <- subset(sing,, select=c(Code,Class,AUC)) 
singcomb <- subset(sing,sing$Class=="LLP", select=c(Code,Class,AUC)) 
summary(singcomb)
png('best_ligands_homogeneous.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
singcomb <- subset(sing,, select=c(Code,Class,AUC)) 
png('best_ligands_homogeneous.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
singcomb <- subset(sing,sing$Class=="LLP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="LDA", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SUC", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SAM", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="U5P", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="1PE", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="GSH", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PMP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PLM", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing,sing$Class=="BOG", select=c(Code,Class,AUC)) 
summary(singcomb)
sing <- read.csv(file="kahraman100.csv", header=TRUE)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="AND", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="BGC", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="NAD", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="PO4", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="GLC", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="FMN", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="EST", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="ATP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="HEM", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="AMP", select=c(Code,Class,AUC)) 
summary(singcomb)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore08" & sing$Class=="FAD", select=c(Code,Class,AUC)) 
summary(singcomb)
sing <- read.csv(file="Kahraman_best.csv", header=TRUE)
singcomb <- subset(sing,, select=c(Code,Class,AUC)) 
png('best_ligands_kahraman.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
png('best_ligands_kahraman.png')
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
png('best_ligands_kahraman.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
png('best_ligands_kahraman.png')
dev.off()
png('best_ligands_kahraman.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,main="Optimo", ylim=c(0,1))
dev.off()
quit()
library(beeswarm)
sing <- read.csv(file="Kahraman_best.csv", header=TRUE)
singcomb <- subset(sing,, select=c(Code,Class,AUC)) 
png('best_ligands_kahraman.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,ylim=c(0,1))
dev.off()
singcomb <- subset(sing, sing$, select=c(Code,Class,AUC)) 
png('best_ligands_kahraman.png')
boxplot(AUC ~ Class, singcomb,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19,add = T, method="swarm",cex=0.5,ylim=c(0,1))
dev.off()
quit()
sing <- read.csv(file="prueba", header = TRUE)
singcomb <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05",)
summary(singcomb)
p <- c()
p[0] <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1),)
sing <- read.csv(file="prueba", header = TRUE, sep = " ")
summary(sing)
p[0] <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
codes = c(1AUA1B4W1FX81I781K8Q2CZV2HD02P4B2Z733B6H)
codes = c('1AUA','1B4W','1FX8','1I78','1K8Q','2CZV','2HD0','2P4B','2Z73','3B6H')
for (idx in 1:10)
idx
print idx
for (idx in 1:10)
 print(idx)
for (idx in 1:10)
 p[idx] <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
?zeros
?zero
p = list()
for (idx in 1:10)
 p[idx] <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
?list
vector("list", 5)
p <- vector("list", 10)
for (idx in 1:10)
 p[idx] <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 1
p1 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 2
p2 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 3
p3 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 4
p4 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 5
p5 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 6
p6 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 7
p7 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 8
p8 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 9
p9 <- subset(sing, sing$Atomtypes=="CA_ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Distance==6.0 & sing$Median.Score.=="SrelScore05" & (sing$code1==codes[idx] | sing$code2==codes[idx]),)
idx = 10
p10 <- subset(sing, sing$code1==codes[idx] | sing$code2==codes[idx]),)
summary(p1)
codes
codes[idx]
sing[sing$code1==codes[idx]]
sing[sing$code1==codes[idx],]
summary(sing[sing$code1==codes[idx],])
summary(sing[sing$code1==codes[idx] | sing[sing$code2==codes[idx],])
(sing[sing$code1==codes[idx] | sing$code2==codes[idx],])
sing[sing$code1==codes[idx] | sing[sing$code2==codes[idx],]
idx = 1; p1 <- sing[sing$code1==codes[idx] | sing[sing$code2==codes[idx],]
idx = 1; p1 <- sing[sing$code1==codes[idx] | sing$code2==codes[idx],]
summary(p1)
nrow(p1)
idx = 1; p1 <- sing[sing$code1==codes[idx],]
summary(p1)
idx=2; p2 <- sing[sing$code1==codes[idx],]
idx=3; p3 <- sing[sing$code1==codes[idx],]
idx=4; p4 <- sing[sing$code1==codes[idx],]
idx=5; p5 <- sing[sing$code1==codes[idx],]
idx=6; p6 <- sing[sing$code1==codes[idx],]
idx=7; p7 <- sing[sing$code1==codes[idx],]
idx=8; p8 <- sing[sing$code1==codes[idx],]
idx=9; p8 <- sing[sing$code1==codes[idx],]
idx=9; p9 <- sing[sing$code1==codes[idx],]
idx=10; p10 <- sing[sing$code1==codes[idx],]
library(pROC)
install.packages('pROC')
library(pROC)
?auc
a <- 1:10
a
p1$class1 == p1$class2
a[1] <- auc(p1$class1 == p1$class2, p1$Srel)
a
a[2] <- auc(p2$class1 == p1$class2, p1$Srel)
a[3] <- auc(p3$class1 == p1$class2, p1$Srel)
a[4] <- auc(p4$class1 == p1$class2, p1$Srel)
a[5] <- auc(p5$class1 == p1$class2, p1$Srel)
a[6] <- auc(p6$class1 == p1$class2, p1$Srel)
a[7] <- auc(p7$class1 == p1$class2, p1$Srel)
a[8] <- auc(p8$class1 == p1$class2, p1$Srel)
a[9] <- auc(p9$class1 == p1$class2, p1$Srel)
a[10] <- auc(p10$class1 == p1$class2, p1$Srel)
a
a[1] <- auc(p1$class1 == p1$class2, p1$Srel)
a[2] <- auc(p2$class1 == p2$class2, p2$Srel)
a
a[3] <- auc(p3$class1 == p3$class2, p3$Srel)
a[4] <- auc(p4$class1 == p4$class2, p4$Srel)
a[5] <- auc(p5$class1 == p5$class2, p5$Srel)
a[6] <- auc(p6$class1 == p6$class2, p6$Srel)
a[7] <- auc(p7$class1 == p7$class2, p7$Srel)
a[8] <- auc(p8$class1 == p8$class2, p8$Srel)
a[9] <- auc(p9$class1 == p9$class2, p9$Srel)
a[10] <- auc(p10$class1 == p10$class2, p10$Srel)
a
median(a)
a
codes
head(sing)
quit()
sing <- read.csv(file="best_hom_ligands.csv", header=TRUE)
singcomb <- subset(sing, , select=c(code,class,auc))
singcomb <- subset(sing, , select=c(Code,Class,AUC))
png('bests_homogeneous.png')
boxplot(AUC ~ Class, singcomb, xlab = "Ligand", ylab="AUC")
beeswarm(auc ~ class, singcomb, add = T, pch=19, method="swarm",cex=0.5)
library(beeswarm)
beeswarm(auc ~ class, singcomb, add = T, pch=19, method="swarm",cex=0.5)
beeswarm(AUC ~ Class, singcomb, add = T, pch=19, method="swarm",cex=0.5)
dev.off()
png('bests_homogeneous.png')
beeswarm(auc ~ class, singcomb, add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb, add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
dev.off()
png('bests_homogeneous.png')
beeswarm(AUC ~ Class, singcomb, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
boxplot(AUC ~ Class, singcomb,add = T, xlab = "Ligand", ylab="AUC")
dev.off()
png('bests_homogeneous.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1))
boxplot(AUC ~ Class, singcomb,add = T, xlab = "Ligand", ylab="AUC")
dev.off()
png('bests_homogeneous.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1))
dev.off()
png('bests_homogeneous.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1))
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Best values per ligand ")
dev.off()
png('bests_homogeneous.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1),main="Best values per ligand ")
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Best values per ligand ")
dev.off()
singcomb <- subset(sing,sing&Class=="LDA" , select=c(Code,Class,AUC))
singcomb <- subset(sing,sing$Class=="LDA" , select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SUC", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="SAM", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="LLP", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="U5P", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="1PE", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="GSH", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PMP", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PLM", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="BOG", select=c(Code,Class,AUC))
summary(singcomb)
sing <- read.csv(file="homo_optimal.csv", header=TRUE)
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" , select=c(Code,Class,AUC))
sing <- read.csv(file="homo_optimal_lig.csv", header=TRUE)
sing <- read.csv(file="homo_optimal.csv", header=TRUE)
sing <- read.csv(file="homo_optimal_lig.csv", header=TRUE)
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" , select=c(Code,Class,AUC))
sing <- read.csv(file="homo_optimal.csv", header=TRUE)
sing <- read.csv(file="homo_optimal.csv", header=TRUE)
sing <- read.csv(file="homo_optimal.csv", header=TRUE)
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05"&        ,
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" ,select=c(Code,Class,AUC))
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" ,select=c(Code,Class,AUC))
sing <- read.csv(file="homo_optimal_lig.csv", header=TRUE)
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" ,select=c(Code,Class,AUC))
summary(singcomb)
png('hom_GRE_6.0_SAM_CA_boxplot.png')
dev.off()
png('homo_optimal_boxplot.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1),main="Homogeneous")
> beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Homogeneous")
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Homogeneous")
dev.off()
sing <- read.csv(file="kah_best_perligands.csv", header=TRUE)
singcomb <- subset(sing,sing$Class=="AND", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="BGC", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="NAD", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="PO4", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="GLC", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="FMN", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="EST", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="ATP", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="AMP", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="HEM", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing,sing$Class=="FAD", select=c(Code,Class,AUC))
summary(singcomb)
singcomb <- subset(sing, select=c(Code,Class,AUC))
png('bests_kahraman.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1),main="Best values per ligand ")
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Best values per ligand ")
dev.off()
singcomb <- subset(sing,sing$Atomtypes == "CA_ACC_DON_GRE" & sing$Cuttoff==3 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" ,select=c(Code,Class,AUC))
sing <- read.csv(file="kah_optimal.csv", header=TRUE)
singcomb <- subset(sing,sing$Atomtypes == "ACC_DON_GRE" & sing$Cuttoff==3.5 & sing$Ncliques==5 & sing$Median.Score.=="SrelScore05" ,select=c(Code,Class,AUC))
png('kah_optimal.png')
boxplot(AUC~Class, singcomb,  ylim=c(0,1),main="Kahraman")
beeswarm(AUC ~ Class, singcomb,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Kahraman")
dev.off()
quit()
require(reshape2)
df <- read.csv("TestData.csv", header=T)
df.m <- melt(df, id.var = "Label")
df.m
require(ggplot2)
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))
ggplot(data = df.m, aes(x=variable, y=valor)) + geom_boxplot(aes(fill=Label))
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))
df <- read.csv("clickvsisomif.csv", header=T)
df.m <- melt(df, id.var = "Label")
df
df <- read.csv("clickvsisomif.csv", header=T)
df
df.m <- melt(df, id.var = "Label")
df.m
require(ggplot2)
ggplot(data = df.m, aes(x=Ligand, y=AUC)) + geom_boxplot(aes(fill=Label))
df <- read.csv("clickvsisomif.csv", header=T)
df.m <- melt(df, id.var = "Label")
df.m
require(ggplot2)
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))
png('clickvsisomif.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))
dev.off()
quit()
df <- read.csv("clickvsisomif.csv", header=T)
df.m <- melt(df, id.var = "Label")
require(reshape2)
df.m <- melt(df, id.var = "Label")
df.m
boxplot(AUC~Class, singcomb,  ylim=c(0,1),main="Best values per ligand ")
df.m
require(ggplot2)
png('clickvsisomif.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label),ylim=c(0,1))
dev.off()
png('clickvsisomif.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label)) + ylim(0,1)
dev.off()
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label)) + ylim(0,1)
png('clickvsisomif.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label)) + ylim(0,1)
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label)) + ylim(0,1)
library(beeswarm)
beeswarm(AUC ~ Class, df.m ,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Best values per ligand ")
beeswarm(variable ~ value, df.m ,add = T, pch=19, method="swarm",cex=0.5,ylim=c(0,1), main="Best values per ligand ")
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label)) + ylim(0,1) + scale_y_continuous(breaks=seq(0, 1, 0.10))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + scale_y_continuous(breaks=seq(0, 1, 0.10))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + scale_y_continuous(breaks=seq(0, 1, 0.10)) + ylim(0,1)
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))   + ylim(0,1)
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + scale_y_continuous(breaks=seq(0, 1, 0.10))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + scale_y_continuous(breaks=c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9, 1))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + scale_y_continuous(breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9, 1))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + coord_cartesian(ylim=c(0,1))+scale_y_continuous(breaks=seq(0,1,0.1))
dev.off()
png('clickvsisomif2.png')
ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Label))  + coord_cartesian(ylim=c(0,1))+scale_y_continuous(breaks=seq(0,1,0.1))
dev.off()
quit()
